{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import type { PluginListenerHandle } from \"@capacitor/core\";\n\nexport interface RotationMatrixEvent {\n  rotationMatrix: number[];\n}\n\nexport interface IntrinsicParameters {\n  focalLength: number;\n  sensorWidth: number;\n  sensorHeight: number;\n  pixelWidth: number;\n  pixelHeight: number;\n  principalPointX: number;\n  principalPointY: number;\n  intrinsicCalibration: number[];\n}\n\nexport interface ExtrinsicParameters {\n  rotationMatrix: number[];\n  translationVector: number[];\n}\n\nexport interface cameraParametersPlugin {\n  echo(options: { value: string }): Promise<{ value: string }>;\n  getIntrinsicParameters(options: { position: 'front' | 'back'}): Promise<IntrinsicParameters>;\n  getExtrinsicParameters(): Promise<ExtrinsicParameters>;\n  addListener(\n    eventName: 'rotationMatrixUpdated',\n    listenerFunc: (event: RotationMatrixEvent) => void\n  ): Promise<PluginListenerHandle>;\n}\n"]}